#O(nlogn)
def second_largest(arr):
    unique = sorted(set(arr), reverse=True)
    return unique[1] if len(unique) >= 2 else None

#O(n)

def second_largest(arr):
    unique = set(arr)
    if len(unique) < 2:
        return None
    unique.remove(max(unique))
    return max(unique)

#without inbuilt 
def second_largest(arr):
    if len(arr) < 2:
        return -1
    first = second = float('-inf')#negative infinity
    for num in arr:
        if num > first:
            second =first 
            first=num
        elif num>second and num!=first:
            second= num
    if second == float('-inf'):
        return -1
    else:
        return second

def second_largest(arr):
    
    unique = set(arr)
    if len(unique) < 2:
        return None
    unique.remove(max(unique))
    return max(unique)
arr=[1,2,3,4,5,6,6,7,-1,8,9]
print(second_largest(arr))#output:8
