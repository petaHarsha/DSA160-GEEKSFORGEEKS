def rotate_left(arr, d):
    n = len(arr)
    d %= n  # Normalize d if it's larger than n

    # Step 1: Reverse first d elements
    arr[:d] = reversed(arr[:d])

    # Step 2: Reverse remaining n-d elements
    arr[d:] = reversed(arr[d:])

    # Step 3: Reverse entire array
    arr[:] = reversed(arr)


# TWO WAYS WHILE ABOVE IS ABOUT SLICEING THE ARRAY AND DOING THE REVERSAL THE BELLOW IS MORE STANDARD IN MY OPINION
def rotateArr(arr, d):
    n = len(arr)
    d = d % n  # Handle cases where d > n
    
    # Reverse the first d elements
    reverse(arr, 0, d-1)
    
    # Reverse the remaining elements  
    reverse(arr, d, n-1)
    
    # Reverse the entire array
    reverse(arr, 0, n-1)

def reverse(arr, start, end):
    while start < end:
        arr[start], arr[end] = arr[end], arr[start]
        start += 1
        end -= 1
